REVIEW 1. Do you need to "Sort(pos)" ? the "j"s you push_back are bigger and bigger right?

REVIEW 2. 

            while (i < size)
            {
                j = i+1;
                while (nums[i] == nums[j] && j < size)
                {
                    pos.push_back(j);
                    j++;
                }

                Sort(pos);
                size = Erase(pos,nums);
                pos.clear();

                i++;
            }


 This loop is wrong.

 for example for this case:

 1 1 1 3

 (1) the first loop i = 0
     after           while (nums[i] == nums[j] && j < size)

pos = [1, 2]
 (2) the second loop i = 1
     after           while (nums[i] == nums[j] && j < size)

pos = [1, 2, 2]

you will push "index 2" twice!

i++ should be i = j;

REVIEW 3. "you must do this in place with constant memory."

You use "vector<int> pos", which is not constant memory, because the size of "pos" depends on the size of the input "nums".

So your solution is not a best solution which meet the requirement.

Revise your original version based on REVEIW 1 and REVIEW 2.
And Because of REVIEW 3, you need to rewrite your solution using CONSTANT MEMORY!!
